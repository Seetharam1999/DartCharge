{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/srs/cc0e7f07-99b7-4dba-942d-231b731af3c6/Project/react/DartCharge/components/Screen/vehicleDetails.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Icon, Card, Button } from 'react-native-elements';\nimport ListView from 'deprecated-react-native-listview';\nimport * as firebase from 'firebase';\n\nvar vehicle = function (_Component) {\n  _inherits(vehicle, _Component);\n\n  var _super = _createSuper(vehicle);\n\n  function vehicle(props) {\n    var _this;\n\n    _classCallCheck(this, vehicle);\n\n    _this = _super.call(this, props);\n    var ds = new ListView.DataSource({\n      rowHasChanged: function rowHasChanged(r1, r2) {\n        return r1 !== r2;\n      }\n    });\n    _this.state = {\n      itemDataSource: ds,\n      id: ''\n    };\n    return _this;\n  }\n\n  _createClass(vehicle, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getItem();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _firebase$auth = firebase.auth(),\n          currentUser = _firebase$auth.currentUser;\n\n      this.setState({\n        id: currentUser.uid\n      });\n      console.log(this.state.id);\n      this.getItem();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      var item = [{\n        title: 'one'\n      }, {\n        title: 'two'\n      }];\n      this.setState({\n        itemDataSource: this.state.itemDataSource.cloneWithRows(item)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        source: require(\"../../assets/road.jpg\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(ListView, {\n        dataSource: this.state.itemDataSource,\n        renderRow: function renderRow(item) {\n          React.createElement(View, {\n            style: {\n              backgroundColor: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 12,\n              color: 'black'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }\n          }, item.title));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }\n      })));\n    }\n  }]);\n\n  return vehicle;\n}(Component);\n\nvehicle.navigationOptions = {\n  title: 'Your Vehicle'\n};\nexport { vehicle as default };\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/media/srs/cc0e7f07-99b7-4dba-942d-231b731af3c6/Project/react/DartCharge/components/Screen/vehicleDetails.js"],"names":["React","Component","Icon","Card","Button","ListView","firebase","vehicle","props","ds","DataSource","rowHasChanged","r1","r2","state","itemDataSource","id","getItem","auth","currentUser","setState","uid","console","log","item","title","cloneWithRows","require","styles","image","container","backgroundColor","fontSize","color","navigationOptions","StyleSheet","create","flex","resizeMode","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;AAEA,SAASC,IAAT,EAAcC,IAAd,EAAmBC,MAAnB,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,KAAIC,QAAX,MAAyB,UAAzB;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;AACA,QAAIC,EAAE,GAAC,IAAIJ,QAAQ,CAACK,UAAb,CAAwB;AAACC,MAAAA,aAAa,EAAC,uBAACC,EAAD,EAAIC,EAAJ;AAAA,eAASD,EAAE,KAAGC,EAAd;AAAA;AAAf,KAAxB,CAAP;AACD,UAAKC,KAAL,GAAW;AACPC,MAAAA,cAAc,EAACN,EADR;AAEDO,MAAAA,EAAE,EAAC;AAFF,KAAX;AAHH;AAOC;;;;yCACe;AAChB,WAAKC,OAAL;AACH;;;wCACsB;AAAA,2BAEUX,QAAQ,CAACY,IAAT,EAFV;AAAA,UAENC,WAFM,kBAENA,WAFM;;AAGb,WAAKC,QAAL,CAAc;AAACJ,QAAAA,EAAE,EAACG,WAAW,CAACE;AAAhB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,EAAvB;AACA,WAAKC,OAAL;AA2BD;;;8BACQ;AACL,UAAIO,IAAI,GAAC,CAAC;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAD,EAAe;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAf,CAAT;AACA,WAAKL,QAAL,CAAc;AACVL,QAAAA,cAAc,EAAC,KAAKD,KAAL,CAAWC,cAAX,CAA0BW,aAA1B,CAAwCF,IAAxC;AADL,OAAd;AAGH;;;6BAIG;AAEJ,aACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEG,OAAO,yBAAhC;AAA2D,QAAA,KAAK,EAAEC,MAAM,CAACC,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,QAAD;AACA,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWC,cADvB;AAEA,QAAA,SAAS,EAAE,mBAACS,IAAD,EAAQ;AAClB,8BAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACO,cAAAA,eAAe,EAAC;AAAjB,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAC,EAAV;AAAaC,cAAAA,KAAK,EAAC;AAAnB,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKT,IAAI,CAACC,KADV,CADJ;AAKA,SARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,CADJ,CADJ;AAcE;;;;EAvE2BxB,S;;AAAhBM,O,CAoDV2B,iB,GAAkB;AACrBT,EAAAA,KAAK,EAAC;AADe,C;SApDRlB,O;AAyErB,IAAMqB,MAAM,GAACO,UAAU,CAACC,MAAX,CAAkB;AAC3BP,EAAAA,KAAK,EAAC;AACFQ,IAAAA,IAAI,EAAC,CADH;AAEFC,IAAAA,UAAU,EAAC,OAFT;AAGFC,IAAAA,cAAc,EAAC,QAHb;AAIFC,IAAAA,UAAU,EAAC;AAJT,GADqB;AAO3BV,EAAAA,SAAS,EAAC;AACNO,IAAAA,IAAI,EAAC,CADC;AAENE,IAAAA,cAAc,EAAC;AAFT;AAPiB,CAAlB,CAAb","sourcesContent":["import React,{Component} from 'react';\nimport {View,Text,StyleSheet,ImageBackground}from 'react-native';\nimport { Icon,Card,Button} from 'react-native-elements';\nimport ListView from 'deprecated-react-native-listview';\nimport *as firebase from 'firebase';\n//import { FlatList } from 'react-native-gesture-handler';\nexport default class vehicle extends Component{\n    constructor(props)\n    {\n        super(props);\n        let ds=new ListView.DataSource({rowHasChanged:(r1,r2)=>r1!==r2});\n       this.state={\n           itemDataSource:ds,\n                 id:''\n       }\n    }\ncomponentWillMount(){\n    this.getItem();\n}\n    componentDidMount(){\n         \n         const { currentUser } = firebase.auth()\n          this.setState({id:currentUser.uid})\n          console.log(this.state.id);\n          this.getItem()\n    /*\n        firebase.database().ref(`/Users/`).on('value',snap=>{\n           snap.forEach(data=>{\n               data.forEach(dataa=>{\n                   dataa.forEach(num=>{\n                    num.forEach(da=>{\n                    if(da.key==='VehicleRegistration')\n                    {\n                       let val=da.key.length\n                        \n                        var register={\n                            id:parseInt(val)+1,\n                            registerNum:da.val()\n                        }\n                        console.log(register);\n                        this.state.num.push(regiter)\n                         \n                           \n                    }\n                    })\n                   })\n               })\n           })\n         \n         })\n        */\n        }\n        getItem(){\n            let item=[{title:'one'},{title:'two'}];\n            this.setState({\n                itemDataSource:this.state.itemDataSource.cloneWithRows(item)\n            })\n        }\n    static navigationOptions={\n        title:'Your Vehicle'\n    }\n    render(){\n       \n        return(\n            <ImageBackground source={require('../../assets/road.jpg')} style={styles.image}>\n                <View style={styles.container}>\n               <ListView\n               dataSource={this.state.itemDataSource}\n               renderRow={(item)=>{\n                <View style={{backgroundColor:'white'}}>\n                    <Text style={{fontSize:12,color:'black'}}>\n                        {item.title}\n                    </Text>\n                </View>\n               }}/>\n             </View>\n                </ImageBackground>\n        )}\n}\nconst styles=StyleSheet.create({\n    image:{\n        flex:1,\n        resizeMode:'cover',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    container:{\n        flex:1,\n        justifyContent:'center'\n    }\n})"]},"metadata":{},"sourceType":"module"}
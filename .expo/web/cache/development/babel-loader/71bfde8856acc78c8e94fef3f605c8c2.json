{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/srs/cc0e7f07-99b7-4dba-942d-231b731af3c6/Project/react/DartCharge/components/RegisterScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input, Button, Icon } from 'react-native-elements';\nimport * as firebase from 'firebase';\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      password: '',\n      email: '',\n      number: '',\n      uid: '',\n      errMessage: null\n    };\n\n    _this.handleRegister = function () {\n      if (!_this.state.email && !_this.state.password && !_this.state.number && !_this.state.username) {\n        Alert.alert(\"Please Enter Details email/password\");\n\n        _this.setState({\n          errMessage: 'please enter email/password'\n        });\n      } else {\n        firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (res) {\n          setTimeout(function () {\n            Alert.alert(\"user is created\");\n            res.user.updateProfile({\n              displayName: _this.state.username\n            });\n          }, 2000);\n\n          _this.update(res.user.uid);\n\n          _this.setState({\n            username: '',\n            password: '',\n            email: '',\n            number: ''\n          });\n        }).catch(function (error) {\n          if (error.code === 'auth/email-already-in-use') {\n            console.log('That email address is already in use!');\n\n            _this.setState({\n              errMessage: error.code\n            });\n          }\n\n          if (error.code === 'auth/invalid-email') {\n            console.log('That email address is invalid!');\n\n            _this.setState({\n              errMessage: error.code\n            });\n          }\n        });\n      }\n\n      _this.update = function (id) {\n        firebase.database().ref(\"/Users/\" + id).set({\n          email: _this.state.email,\n          name: _this.state.username,\n          ph_number: _this.state.number,\n          wallet: {\n            amount: '0'\n          }\n        }).then(function () {\n          return console.log('Data set.');\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"Register User\")), React.createElement(View, {\n        style: {\n          paddingTop: 10,\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.errMess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      }, this.state.errMessage)), React.createElement(View, {\n        style: {\n          marginTop: 20,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Username\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user-o'\n        },\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Email\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'envelope-o'\n        },\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Number\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user-o'\n        },\n        onChangeText: function onChangeText(number) {\n          return _this2.setState({\n            number: number\n          });\n        },\n        value: this.state.number,\n        keyboardType: \"number-pad\",\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'key'\n        },\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        secureTextEntry: true,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }\n      }), React.createElement(View, {\n        style: styles.formButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        onPress: this.handleRegister,\n        title: \"Register\",\n        icon: React.createElement(Icon, {\n          name: \"user-plus\",\n          type: \"font-awesome\",\n          size: 24,\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }\n        }),\n        buttonStyle: {\n          backgroundColor: \"#512DA8\",\n          padding: 10,\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 10,\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Login');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, \"Already have a Account? Login \"))))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  errMess: {\n    paddingTop: 10,\n    color: 'red',\n    fontSize: 20,\n    justifyContent: 'center'\n  },\n  formInput: {\n    marginTop: 10,\n    paddingTop: 10,\n    backgroundColor: 'transparent',\n    width: '98%'\n  }\n});","map":{"version":3,"sources":["/media/srs/cc0e7f07-99b7-4dba-942d-231b731af3c6/Project/react/DartCharge/components/RegisterScreen.js"],"names":["React","Component","Input","Button","Icon","firebase","Register","state","username","password","email","number","uid","errMessage","handleRegister","Alert","alert","setState","auth","createUserWithEmailAndPassword","then","res","setTimeout","user","updateProfile","displayName","update","catch","error","code","console","log","id","database","ref","set","name","ph_number","wallet","amount","styles","container","paddingTop","fontSize","backgroundColor","errMess","marginTop","width","type","formInput","formButton","padding","margin","justifyContent","props","navigation","navigate","textAlign","StyleSheet","create","flex","alignItems","color"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport {View,StyleSheet, Alert,TouchableOpacity,Text,ScrollView} from 'react-native';\nimport {Input,Button,Icon} from 'react-native-elements';\nimport *as firebase from 'firebase';\nexport default class Register extends Component{\n    state={\n        username:'',\n        password:'',\n        email:'',\n        number:'',\n        uid:'',\n        errMessage:null\n    }\nhandleRegister=()=> {\n\nif(!this.state.email&&!this.state.password&&!this.state.number && !this.state.username){\n    Alert.alert(\"Please Enter Details email/password\")\n    this.setState({errMessage:'please enter email/password'})\n}\nelse{\n firebase.auth().createUserWithEmailAndPassword(this.state.email,this.state.password)\n.then((res)=>{\n    setTimeout(()=>{\n        Alert.alert(\"user is created\");\n     res.user.updateProfile(\n            {\n                displayName:this.state.username,\n\t\t         });\n    },2000);\n       \n                 this.update(res.user.uid)\n            this.setState({\n        username:'',\n        password:'',\n        email:'',\n        number:''\n})\n\n})\n.catch(error=>{\n    if (error.code === 'auth/email-already-in-use') {\n      console.log('That email address is already in use!');\n      this.setState({errMessage:error.code});\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n      this.setState({errMessage:error.code});\n    }\n\n})\n\n}\nthis.update=(id)=>{\n    firebase.database()\n.ref(`/Users/${id}`)\n.set({\n  email: this.state.email,\n  name:this.state.username,\n  ph_number:this.state.number,\n  wallet:{\n      amount:'0'\n  }\n})\n.then(() => console.log('Data set.'));\n}\n    }\n\n    render() {\n        return(\n            <ScrollView>\n            <View style={styles.container}>\n                <View style={{paddingTop:10}}>\n                    <Text style={{fontSize:20}}>Register User</Text>\n                    </View>\n\n\n                  <View style={{paddingTop:10,backgroundColor:'transparent'}}>\n             <Text style={styles.errMess}>{this.state.errMessage}</Text> \n                </View>\n                <View style={{marginTop:20,width:'100%'}}>\n                <Input\n                    placeholder=\"Username\"\n                    leftIcon={{ type: 'font-awesome', name: 'user-o' }}\n                    onChangeText={(username) => this.setState({username})}\n                    value={this.state.username}\n                    containerStyle={styles.formInput}\n                    />\n                \n               \n                <Input\n                    placeholder=\"Email\"\n                    leftIcon={{ type: 'font-awesome', name: 'envelope-o' }}\n                    onChangeText={(email) => this.setState({email})}\n                    value={this.state.email}\n                    containerStyle={styles.formInput}\n                    />\n                      <Input\n                    placeholder=\"Number\"\n\n                    leftIcon={{ type: 'font-awesome', name: 'user-o' }}\n                    onChangeText={(number) => this.setState({number})}\n                    value={this.state.number}\n                    keyboardType='number-pad'\n                    containerStyle={styles.formInput}\n                    />\n               <Input\n                    placeholder=\"Password\"\n                \n                    leftIcon={{ type: 'font-awesome', name: 'key' }}\n                    onChangeText={(password) => this.setState({password})}\n                    value={this.state.password}\n                    secureTextEntry={true}\n                    containerStyle={styles.formInput}\n                    />\n                <View style={styles.formButton}>\n                    <Button\n                        onPress={this.handleRegister}\n                        title=\"Register\"\n                        icon={\n                            <Icon\n                                name='user-plus'\n                                type='font-awesome'            \n                                size={24}\n                                color= 'white'\n                            />\n                        }\n                        buttonStyle={{\n                            backgroundColor: \"#512DA8\",\n                            padding:10,margin:10\n                        }}\n                        />\n                        \n                        <TouchableOpacity style={{margin:10,justifyContent:'center'}}onPress={()=>this.props.navigation.navigate('Login')}>\n            <Text style={{textAlign:'center',marginTop:20}}>Already have a Account? Login </Text>\n            </TouchableOpacity>  \n                  </View>\n                </View>\n            </View>\n           </ScrollView>\n        );\n    }\n\n}\nconst styles=StyleSheet.create({\n    container:{\n        flex:1,\n        marginTop:30,\n        justifyContent:'center',\n        alignItems:'center',\n        backgroundColor:'white'\n        \n    },errMess:{\n        paddingTop:10,\n        color:'red',\n        fontSize:20,\n        justifyContent:'center'\n    },\n    formInput:{\n        marginTop:10,\n        paddingTop:10,\n        backgroundColor:'transparent',\n        width:'98%',\n        \n    }\n})\n"]},"metadata":{},"sourceType":"module"}